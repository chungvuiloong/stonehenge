tls:
  certificates:
    - certFile: /ssl/docker.so.crt
      keyFile: /ssl/docker.so.key
    - certFile: /ssl/traefik.me.crt
      keyFile: /ssl/traefik.me.key

http:

  routers:

    traefik_http:
      entryPoints: http
      rule: Host(`{{ env "TRAEFIK_HOST" }}`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))
      service: api@internal
      middlewares: redirect-to-https@file
    traefik:
      entryPoints: https
      #rule: Host(`{{ env "TRAEFIK_HOST" }}`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))
      rule: Host(`{{ env "TRAEFIK_HOST" }}`) || (PathPrefix(`/api`))
      service: api@internal
      tls: true

    mailhog_http:
      entryPoints: http
      rule: Host(`{{ env "MAILHOG_HOST" }}`)
      service: mailhog@file
      middlewares: redirect-to-https@file
    mailhog:
      entryPoints: https
      rule: Host(`{{ env "MAILHOG_HOST" }}`)
      service: mailhog@file
      tls: true

    catchall_http:
      entryPoints: http
      rule: HostRegexp(`{host:.+}`)
      service: errors@file
      priority: 1
      middlewares: redirect-to-https@file
    catchall:
      entryPoints: https
      rule: HostRegexp(`{host:.+}`)
      service: errors@file
      tls: true
      priority: 1

  services:

    traefik:
      loadBalancer:
        servers:
          - url: "http://stonehenge:8080"

    mailhog:
      loadBalancer:
        servers:
          - url: "http://stonehenge:8025"

    errors:
      loadBalancer:
        servers:
          - url: "http://stonehenge:8181"

  middlewares:

    redirect-to-https:
      redirectScheme:
        scheme: https
        permanent: false

    error-page:
      errors:
        status:
          - "400-599"
        service: errors@file
        query: "/usr/share/nginx/html/index.html"
