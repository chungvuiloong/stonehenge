tls:
  certificates:
    - certFile: /ssl/docker.so.crt
      keyFile: /ssl/docker.so.key
    - certFile: /ssl/traefikme.crt
      keyFile: /ssl/traefikme.key

http:

  routers:

    traefik_http:
      entrypoints: http
      rule: Host(`{{ env "TRAEFIK_HOST" }}`,`traefik.traefik.me`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))
      service: "mailhog@file"
      middlewares: redirect-to-https@file
    traefik:
      entrypoints: https
      rule: Host(`{{ env "TRAEFIK_HOST" }}`,`traefik.traefik.me`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))
      service: api@internal
      tls: "true"
    mailhog_http:
      entrypoints: http
      rule: Host(`{{ env "MAILHOG_HOST" }}`,`mailhog.traefik.me`)
      service: "mailhog@file"
      middlewares: redirect-to-https@file
    mailhog:
      entrypoints: https
      rule: Host(`{{ env "MAILHOG_HOST" }}`,`mailhog.traefik.me`)
      service: "mailhog@file"
      tls: "true"

  services:

    traefik:
      loadBalancer:
        servers:
          - url: "http://stonehenge:8080"

    mailhog:
      loadBalancer:
        servers:
          - url: "http://stonehenge:8025"

  middlewares:

    redirect-to-https:
      redirectScheme:
        scheme: https
        permanent: false

    error-page:
      errors:
        status:
          - "400-599"
        service: serviceError
        query: "/{status}.html"
